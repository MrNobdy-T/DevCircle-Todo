@page "/todo/create"
@using Blazored.FluentValidation
@using DevCircle.Todo.API.Client.Services
@using DevCircle.Todo.Application.Mapping.DTOs
@using DevCircle.Todo.Application.Extensions
@using DevCircle.Todo.View.Components.Shared
@using NodaTime
@rendermode InteractiveServer
@inject TodoItemService _todoService
@inject UserService _userService
@inject NavigationManager _navManager;

<MudContainer MaxWidth="MaxWidth.Large">
	<MudGrid>
		<MudItem xs="12">
			<MudPaper Class="pa-5" Outlined="true" Square="true">
				<MudText Typo="Typo.h2">Create a Todo</MudText>
			</MudPaper>
		</MudItem>
		<MudItem xs="12">
			<EditForm Model="_itemDTO" OnSubmit="@SubmitFormAsync">
				<FluentValidationValidator DisableAssemblyScanning="true" @ref="@_validator" />
				<DataAnnotationsValidator />
				<MudPaper>
					<MudGrid Spacing="2">
						<MudItem Class="d-flex justify-start flex-grow-1 gap-4">
							<MudGrid>
								<MudItem>
									<InputField @bind-Value="_itemDTO.Title" Title="Title"
												For="@(() => _itemDTO.Title)" />
								</MudItem>
								<MudItem>
									<NullableDateInputField Title="Due date" @bind-Value="_itemDTO.DueTime"
															For="@(() => _itemDTO.DueTime)" />
								</MudItem>
								<MudItem>
									<DateInputField Title="Creation Date" @bind-Value=_itemDTO.CreationDate
													IsDisabled=true
													For="@(() => _itemDTO.CreationDate)" />
								</MudItem>
								<MudItem>
									<MudSelect Class="pa-5" T="UserDTO" Label="Owner"
											   AnchorOrigin="Origin.BottomCenter"
											   For="@(() => _itemDTO.Owner)"
											   @bind-Value=@_itemDTO.Owner>
										@foreach (UserDTO user in _userDTOs)
										{
											<MudSelectItem T="UserDTO" Value="user">@user.Name</MudSelectItem>
										}
									</MudSelect>
								</MudItem>
							</MudGrid>
						</MudItem>
					</MudGrid>
				</MudPaper>
				<MudGrid>
					<MudItem xs="12">
						<MudText Typo="Typo.h5" Class="pa-1">Description</MudText>
					</MudItem>
					<MudItem xs="12">
						<MudPaper Outlined="true">
							<MudTextField T="@string" @bind-Text="@_itemDTO.Description" FullWidth=true AutoGrow="@true" Lines="5"></MudTextField>
						</MudPaper>
					</MudItem>
				</MudGrid>
				<MudButton ButtonType="@ButtonType.Submit">Submit</MudButton>
			</EditForm>
		</MudItem>

	</MudGrid>
</MudContainer>

@code {
	private TodoItemDTO _itemDTO = new();
	private IEnumerable<UserDTO> _userDTOs = Enumerable.Empty<UserDTO>();
	private FluentValidationValidator? _validator;


	protected override async void OnInitialized()
	{
		Instant now = SystemClock.Instance.GetCurrentInstant();
		DateTimeZone tz = DateTimeZoneProviders.Tzdb.GetSystemDefault();
		ZonedDateTime today = now.InZone(tz);

		_itemDTO.CreationDate = today.LocalDateTime;

		var response = await _userService.GetAll();
		_userDTOs = response.UserDTOs;
		base.OnInitialized();
	}

	public async Task SubmitFormAsync()
	{
		if (await _validator!.ValidateAsync())
		{
			var response = await _todoService.Create(new()
				{
					TodoItemDTO = _itemDTO
				});
			if (!response.HasErrorOccured())
			{
				_navManager.NavigateTo("/");
			}
		}
	}
}
