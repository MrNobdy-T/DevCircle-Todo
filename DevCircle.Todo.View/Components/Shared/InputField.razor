@using System.Linq.Expressions
@using DevCircle.Todo.View.Components.Shared.BaseComponents
@rendermode InteractiveServer
@inherits BaseInputField<string>
<!-- ChildComponent.razor -->
<MudContainer Class="d-flex flex-grow-1 gap-3" Elevation="0">
	<MudGrid>
		<MudItem>
			<MudText Class="py-4 d-flex flex-0">@Title:</MudText>
			</MudItem>
			<MudItem>
				<MudInput T="string" @bind-Value="@DisplayedValue" Disabled="@IsDisabled" Variant="Variant.Outlined" For="@For" />
				@if (For is not null)
			{
				<ValidationMessage For="@For" />
			}
		</MudItem>
	</MudGrid>
</MudContainer>

@code {
	private string _displayedValue;
	public string DisplayedValue
	{
		get => _displayedValue;
		set
		{
			_displayedValue = value;
			Value = value;
			ValueChanged.InvokeAsync(Value);
		}
	}

	protected override Task OnInitializedAsync()
	{
		return base.OnInitializedAsync();
	}
}
