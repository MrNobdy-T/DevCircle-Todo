@using System.Linq.Expressions
@using DevCircle.Todo.Application.Mapping.ValueConverter
@using DevCircle.Todo.View.Components.Shared.BaseComponents
@using NodaTime
@rendermode InteractiveServer
@inherits BaseInputField<LocalDateTime>
<!-- ChildComponent.razor -->
<MudContainer Class="d-flex flex-grow-1 gap-3" Elevation="0">
	<MudGrid>
		<MudItem>
			<MudText Class="py-4 d-flex flex-0">@Title:</MudText>
			</MudItem>
			<MudItem>
				<MudDatePicker @bind-Date="DisplayedValue" Disabled="@IsDisabled" Editable="true" Variant="Variant.Outlined" Class="d-flex" />
			@if(For is not null)
			{
				<ValidationMessage For="@For"/>
			}
		</MudItem>
		</MudGrid>
	</MudContainer>

	@code {
	protected DateTime? _displayedTime;
	protected DateTime? DisplayedValue
	{
		get => _displayedTime;
		set
		{
			_displayedTime = value;
			this.Value = DateTimeConverter.ConvertToNodaTime(_displayedTime);
			this.ValueChanged.InvokeAsync(Value);
		}
	}

	protected override Task OnInitializedAsync()
	{
		this.DisplayedValue = DateTimeConverter.ConvertToDateTime(Value);
		return base.OnInitializedAsync();
	}
}
